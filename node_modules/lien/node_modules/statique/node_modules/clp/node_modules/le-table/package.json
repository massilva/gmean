{
  "name": "le-table",
  "version": "4.0.0",
  "description": "Another NodeJS module for creating ASCII tables.",
  "main": "lib/index.js",
  "scripts": {
    "test": "node example"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:IonicaBizau/node-le-table.git"
  },
  "contributors": [
    {
      "name": "Adam Paszke",
      "email": "gracz1500@gmail.com"
    }
  ],
  "keywords": [
    "table",
    "ascii",
    "node",
    "cli"
  ],
  "author": {
    "name": "Ionică Bizău",
    "email": "bizauionica@gmail.com"
  },
  "license": "KINDLY",
  "bugs": {
    "url": "https://github.com/IonicaBizau/node-le-table/issues"
  },
  "homepage": "https://github.com/IonicaBizau/node-le-table",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "cli-box": "5.0.0",
    "overlap": "2.0.0",
    "ul": "5.0.0"
  },
  "blah": {
    "h_img": "http://i.imgur.com/BKXaFAa.png",
    "ex_img": "http://i.imgur.com/DwyCfWo.png"
  },
  "devDependencies": {},
  "readme": "<!---------------------------------------------------------------------------->\n<!-- STOP, LOOK & LISTEN!                                                   -->\n<!-- ====================                                                   -->\n<!-- Do NOT edit this file directly since it's generated from a template    -->\n<!-- file, using https://github.com/IonicaBizau/node-blah                   -->\n<!--                                                                        -->\n<!-- If you found a typo in documentation, fix it in the source files       -->\n<!-- (`lib/*.js`) and make a pull request.                                  -->\n<!--                                                                        -->\n<!-- If you have any other ideas, open an issue.                            -->\n<!--                                                                        -->\n<!-- Please consider reading the contribution steps (CONTRIBUTING.md).      -->\n<!-- * * * Thanks! * * *                                                    -->\n<!---------------------------------------------------------------------------->\n\n![le-table](http://i.imgur.com/BKXaFAa.png)\n\n# le-table [![Donate now][donate-now]][paypal-donations]\n\nAnother NodeJS module for creating ASCII tables.\n\n![le-table](http://i.imgur.com/DwyCfWo.png)\n\n## Installation\n\n```sh\n$ npm i le-table\n```\n\n## Example\n\n```js\n// Dependencies\nvar Table = require(\"le-table\");\n\n// Table data\nvar data = [\n    [\"Cell 1.1\", \"Cell 2.1\", \"Cell 3.1\"]\n  , [\"Cell 1.2\", {\n        text: \"Multi\\nline\\n\\u001b[34mcell\\ncontent that\\u001b[0m is\\n left aligned.\"\n      , data: {\n            hAlign: \"left\"\n        }\n    }, \"Cell 3.2\"]\n  , [\"Cell 1.3\", \"Cell 2.3\", \"Cell 3.3\"]\n  , [\"Cell 1.4\", \"Cell 2.4\", \"Cell 3.4\"]\n];\n\n// Table defaults\nTable.defaults.marks = {\n    nw: \"┌\"\n  , n:  \"─\"\n  , ne: \"┐\"\n  , e:  \"│\"\n  , se: \"┘\"\n  , s:  \"─\"\n  , sw: \"└\"\n  , w:  \"│\"\n  , b: \" \"\n  , mt: \"┬\"\n  , ml: \"├\"\n  , mr: \"┤\"\n  , mb: \"┴\"\n  , mm: \"┼\"\n};\n\n// Create table instance\nvar myTable = new Table();\n\n// Push data\nfor (var i = 0; i < data.length; ++i) {\n    myTable.addRow([i].concat(data[i]), {\n        hAlign: i > 2 ? \"left\": \"right\"\n    });\n}\n\n// Output table\nconsole.log(myTable.toString());\n\n```\n\n## Documentation\n\n### `LeTable(options)`\nCreates a new instance of `LeTable`.\n\n#### Params\n- **Object** `options`: An object containing the table configuration:\n  - `cell`: object containing\n    - `hAlign` (default: `\"center\"`): One of the following values: `\"left\"`, `\"center\"` and `\"right\"`\n    - `vAlign` (default: `\"middle\"`): One of the following values: `\"top\"`, `\"middle\"` and `\"bottom\"`\n    - `autoEOL` (default: `true`): if true, the lines are wrapped inside of the cell\n    - `stretch` (default: `true`): if true, the size of the box will not be fixed\n  - `marks`: object containing the mark characters (see example)\n\n#### Return\n- **LeTable** The `LeTable` instance.\n\n### `addRow(columns, ops)`\nAdds a new row in table.\n\n#### Params\n- **Array** `columns`: Row data (as array)\n- **Object** `ops`: Options for cell content\n\n#### Return\n- **LeTable** The `LeTable` instance.\n\n### `toString()`\nStringifies the table.\n\n#### Return\n- **String** The stringified table\n\n## How to contribute\nHave an idea? Found a bug? See [how to contribute][contributing].\n\n## License\n[KINDLY][license] © [Ionică Bizău][website]–The [LICENSE](/LICENSE) file contains\na copy of the license.\n\n[license]: http://ionicabizau.github.io/kindly-license/?author=Ionic%C4%83%20Biz%C4%83u%20%3Cbizauionica@gmail.com%3E&year=2015\n[contributing]: /CONTRIBUTING.md\n[website]: http://ionicabizau.net\n[docs]: /DOCUMENTATION.md\n[paypal-donations]: https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=MG98D7NPFZ3MG\n[donate-now]: http://i.imgur.com/jioicaN.png",
  "readmeFilename": "README.md",
  "_id": "le-table@4.0.0",
  "dist": {
    "shasum": "1323a9cbffb70e8ae30681b3c95ffbcdaf6561fc"
  },
  "_from": "le-table@4.0.0",
  "_resolved": "https://registry.npmjs.org/le-table/-/le-table-4.0.0.tgz"
}
